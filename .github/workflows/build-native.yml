name: Build Native Libraries

on:
  workflow_dispatch:
  push:
    tags:
      - 'release/*'

jobs:
  build-linux-windows:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: win-x64
            dockerfile_platform: linux/amd64
            target_triple: x86_64-w64-mingw32
          - platform: linux-x64
            dockerfile_platform: linux/amd64
            target_triple: x86_64-linux-gnu
          - platform: linux-arm64
            dockerfile_platform: linux/arm64
            target_triple: aarch64-linux-gnu
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build libssh2
        run: |
          chmod +x .github/scripts/build-native.sh
          .github/scripts/build-native.sh "${{ matrix.platform }}" "${{ matrix.target_triple }}" "${{ matrix.dockerfile_platform }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libssh2-${{ matrix.platform }}
          path: runtimes/${{ matrix.platform }}/native/

  build-macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: osx-x64
            arch: x86_64
          - platform: osx-arm64
            arch: arm64
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build libssh2 for macOS
        run: |
          chmod +x .github/scripts/build-macos.sh
          .github/scripts/build-macos.sh "${{ matrix.platform }}" "${{ matrix.arch }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libssh2-${{ matrix.platform }}
          path: runtimes/${{ matrix.platform }}/native/

  create-release:
    needs: [build-linux-windows, build-macos]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Get libssh2 commit info
        id: libssh2-info
        run: |
          cd libssh2
          COMMIT_SHA=$(git rev-parse HEAD)
          COMMIT_SHORT=$(git rev-parse --short HEAD)
          COMMIT_DATE=$(git log -1 --format=%cd --date=short)
          # Try to get the tag, if it exists
          TAG=$(git describe --tags --exact-match 2>/dev/null || echo "")
          echo "sha=$COMMIT_SHA" >> $GITHUB_OUTPUT
          echo "short=$COMMIT_SHORT" >> $GITHUB_OUTPUT
          echo "date=$COMMIT_DATE" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Organize native libraries for release
        run: |
          mkdir -p release-assets

          # Package each platform's libraries
          for artifact in artifacts/libssh2-*; do
            platform=$(basename $artifact | sed 's/libssh2-//')
            echo "Packaging $platform..."

            # Create a zip file for this platform
            cd $artifact
            zip -r "../../release-assets/libssh2-$platform.zip" .
            cd ../..
          done

          # Create a combined archive with all platforms
          cd artifacts
          zip -r "../release-assets/libssh2-all-platforms.zip" libssh2-*
          cd ..

          # List what we have
          echo "Release assets:"
          ls -lh release-assets/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.libssh2-info.outputs.tag || steps.libssh2-info.outputs.short }}
          body: |
            Built for libssh2@${{ steps.libssh2-info.outputs.short }} (committed on ${{ steps.libssh2-info.outputs.date }})

            Full commit: ${{ steps.libssh2-info.outputs.sha }}
          files: release-assets/*.zip
          draft: false
          prerelease: false
